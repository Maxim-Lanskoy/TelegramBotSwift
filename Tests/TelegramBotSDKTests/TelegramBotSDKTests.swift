//
// TelegramBot.swift
//
// This source file is part of the Telegram Bot SDK for Swift (unofficial).
//

import Foundation

import XCTest
@testable import TelegramBotSDK

class TelegramBotTests: XCTestCase {
    func logger(_ text: Any?, _nilDescription: String) {
        print("[TEST LOGGER]: \(text ?? "nil")")
    }

    func logger(_ text: Any) {
        print("[TEST LOGGER]: \(text)")
    }

    let botToken = "1916636333:AAHDzlsi8MGp8CVjUYSn16fUA3YizTw1RKg"
    let testChat = ChatId.chat(440740323)

    func testGetBot() throws {
        let bot = TelegramBot(token: botToken, fetchBotInfo: false)

        guard let botUser: User = bot.requestSync("getMe") else {
            XCTAssert(false, "Bot user is nil")
            return
        }

        XCTAssertEqual(botUser.username, "asap_feedback_local_bot")
        logger(botUser)
    }

    func testSendMessage() throws {
        let bot = TelegramBot(token: botToken)
        let msg = bot.sendMessageSync(chatId: testChat, text: "Hello, world!")
        XCTAssertNotNil(msg)
        logger(msg, _nilDescription: "Msg = nil")
    }

    func testSendImage() throws {
        let bot = TelegramBot(token: botToken)
        guard let data = Data(base64Encoded: testImageString) else {
            XCTAssert(false, "Couldn't create data")
            return
        }

        let msg = bot.sendPhotoSync(chatId: testChat, photo: .inputFile(.init(filename: "cat", data: data, mimeType: "JPEG")))
        XCTAssertNotNil(msg)
        logger(msg, _nilDescription: "Msg = nil")
    }

    //TODO: - Finish this test later
    // func testGetUpdates() throws {
    //     let bot = TelegramBot(token: botToken)
    //     let router = Router(bot: bot)
    //
    //     let msg = bot.sendMessageSync(chatId: .chat(440740323), text: "Starting bot tests!")
    //     XCTAssertNotNil(msg)

    //     if let update = bot.nextUpdateSync() {
    //         try router.process(update: update)
    //     } else {
    //         XCTAssert(false, "Bot update is nil")
    //     }
    // }

    let testImageString = """
    
    """
}

#if os(Linux)
extension TelegramBotTests {
    static var allTests : [(String, (TelegramBotTests) -> () throws -> Void)] {
        return [
            ("testGetBot", testGetBot),
            ("testSendMessage", testSendMessage),
            ("testSendImage", testSendImage)
        ]
    }
}
#endif
